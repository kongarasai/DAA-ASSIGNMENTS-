def champagneTower(poured, query_row, query_glass):
    # Initialize a 2D array to store champagne amounts
    tower = [[0.0] * i for i in range(1, 101)]  # maximum size pyramid has 100 rows
    
    # Pour champagne into the top glass
    tower[0][0] = poured
    
    # Traverse through each row and each glass in the row
    for r in range(query_row + 1):
        for c in range(r + 1):
            # Check if current glass has champagne overflow
            overflow = (tower[r][c] - 1.0) / 2.0
            if overflow > 0:
                tower[r + 1][c] += overflow
                tower[r + 1][c + 1] += overflow
    
    # Return the amount of champagne in the specified glass
    return min(1.0, tower[query_row][query_glass])

# Example usage:
poured = 4
query_row = 2
query_glass = 1
print("Amount of champagne in the glass at row", query_row, "and glass", query_glass, ":", champagneTower(poured, query_row, query_glass))
