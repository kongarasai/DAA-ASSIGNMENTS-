import numpy as np

def strassen(A, B):
    if len(A) == 2:
        return np.dot(A, B).tolist()
    else:
        size = len(A) // 2
        A11, A12, A21, A22 = A[:size, :size], A[:size, size:], A[size:, :size], A[size:, size:]
        B11, B12, B21, B22 = B[:size, :size], B[:size, size:], B[size:, :size], B[size:, size:]

        M1 = strassen(A11 + A22, B11 + B22)
        M2 = strassen(A21 + A22, B11)
        M3 = strassen(A11, B12 - B22)
        M4 = strassen(A22, B21 - B11)
        M5 = strassen(A11 + A12, B22)
        M6 = strassen(A21 - A11, B11 + B12)
        M7 = strassen(A12 - A22, B21 + B22)

        C11 = np.array(M1) + np.array(M4) - np.array(M5) + np.array(M7)
        C12 = np.array(M3) + np.array(M5)
        C21 = np.array(M2) + np.array(M4)
        C22 = np.array(M1) - np.array(M2) + np.array(M3) + np.array(M6)

        C = np.vstack((np.hstack((C11, C12)), np.hstack((C21, C22))))
        return C.tolist()

# Test Case
A = np.array([[1, 7], [3, 5]])
B = np.array([[6, 8], [4, 2]])
C = strassen(A, B)
print(np.array(C))  # Output: [[34, 24], [38, 34]]
