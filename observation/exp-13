#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// Example algorithm: Linear Search
int linear_search(int arr[], int n, int key) {
    for (int i = 0; i < n; i++) {
        if (arr[i] == key) {
            return i; // Key found at index i
        }
    }
    return -1; // Key not found
}

// Example algorithm: Binary Search
int binary_search(int arr[], int low, int high, int key) {
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (arr[mid] == key) {
            return mid; // Key found at index mid
        }
        if (arr[mid] < key) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    return -1; // Key not found
}

int main() {
    // Example usage
    int arr[] = {2, 3, 5, 7, 9, 12, 15};
    int n = sizeof(arr) / sizeof(arr[0]);
    int key = 7;

    // Linear Search
    clock_t start = clock();
    int result_linear = linear_search(arr, n, key);
    clock_t end = clock();
    double time_taken_linear = ((double)(end - start)) / CLOCKS_PER_SEC;
    printf("Linear Search: Index of %d is %d\n", key, result_linear);
    printf("Time taken: %f seconds\n", time_taken_linear);

    // Binary Search
    start = clock();
    int result_binary = binary_search(arr, 0, n - 1, key);
    end = clock();
    double time_taken_binary = ((double)(end - start)) / CLOCKS_PER_SEC;
    printf("Binary Search: Index of %d is %d\n", key, result_binary);
    printf("Time taken: %f seconds\n", time_taken_binary);

    return 0;
}
