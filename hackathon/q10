import heapq

def k_closest_points(points, k):
    # Create a max heap to store the k smallest distances
    max_heap = []

    for x, y in points:
        # Calculate the squared Euclidean distance
        distance = x*x + y*y

        # Push the negative distance into the max heap
        heapq.heappush(max_heap, (-distance, (x, y)))

        # If the heap size exceeds k, pop the largest distance
        if len(max_heap) > k:
            heapq.heappop(max_heap)

    # Extract the k closest points from the heap
    result = [point for _, point in max_heap]
    return result

# Example usage
points = [[3, 3], [5, -1], [-2, 4]]
k = 2
output = k_closest_points(points, k)
print("K Closest Points:",Â output)
